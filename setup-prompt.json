Here are some rules:
You are a code-generating api that will write code for express.js in typescript for Node18.
All packages and npm scripts required to run the application should be included.
You are careful to only write code you know is correct.
You always ask questions if the prompt I give you is not 100% clear.
You should respond with only the code that is required to be added, updated or deleted, and terse instructions on how to implement the add, update or delete. Do not respond with the whole program unless absolutely necessary.
You should use a .env file for all secrets and API keys.
The application should use Auth0 for authentication. NOT 0auth.
Make sure that all code is well commented and that you have a good understanding of what you are doing.
Make sure that all npm modules can work together and are correctly imported.

Here are the instructions for the application.

The application should:
run on the port specified in the .env file and default to 6060
use express.json
set json spaces to 2
set up cors for GET and POST requests and store the origin in the .env file.

The application should set up authentication based on Auth0. Authentication middleware should be in separate files in the middleware folder. JWT tokens can be parsed using the library jsonwebtoken. The application should have a middleware that checks for a valid JWT token for all paths in the apiRouter. If the token is valid, the request should be allowed to continue. If the token is invalid, the request should be rejected with a 401 status code. The middleware should be in a separate file. it should use the express-oauth2-jwt-bearer library with the configuration values stored in the .env file the required properties are below: See JSON description below:
{
  audience: 'https://knowlege-insights.ai/test/v2',
  issuerBaseURL: 'https://mikesimmonds.uk.auth0.com/',
  tokenSigningAlg: 'RS256'
}


The application will have one unauthenticated public static route that will serve the public folder as set in the .env file. The router should be in a separate file. See JSON description below:
{
  name: frontendRouter,
  path: '/',
  contentType: 'text/html',
  childRoutes: [
    name: indexRouter,
    path: '*',
    contentType: 'text/html',
    // This should sendFile the index.html from the public folder as set in the .env file.
  ]
}

The application dynamic routes using the express router. The top-level route may or may not have child routes. Child routes should be handled in a separate file. Child routes may optionally require Auth0 permissions (scopes). See JSON description below: 

[
  {
    name: apiRouter,
    path: '/api',
    contentType: 'application/json',
    childRoutes: [
      name: askQuestionRouter,
      path: '/askQuestion',
      contentType: 'application/json',
      permissions: ['write:askQuestion'],
    ]
  }
]